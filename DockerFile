# Use Apache with PHP
FROM php:8.2-apache


# Enable Apache mod_rewrite (needed for .htaccess)
RUN a2enmod rewrite


# Install PHP MySQLi extension and required tools for Composer
RUN apt-get update && apt-get install -y git unzip \
    && docker-php-ext-install mysqli


# Install GD and ZIP extensions
RUN apt-get update && apt-get install -y libzip-dev libpng-dev && docker-php-ext-install gd zip


# Copy composer files first for dependency install
COPY composer.json composer.lock* /var/www/html/

# Set working directory
WORKDIR /var/www/html/

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Install dependencies (including Twig) if composer.json exists
RUN if [ -f composer.json ]; then composer install --no-dev --no-interaction --prefer-dist; fi

# Copy app files to Apache webroot
COPY . /var/www/html/

# Set working directory
WORKDIR /var/www/html/

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Install all PHP dependencies (including Twig)
RUN composer install --no-dev --no-interaction --prefer-dist

# Give proper permissions
RUN chown -R www-data:www-data /var/www/html && chmod -R 755 /var/www/html

# Ensure config.php and admin/config.php exist and are writable for installer
RUN cp -n config-dist.php config.php && cp -n admin/config-dist.php admin/config.php && \
    chmod 666 config.php admin/config.php && \
    mkdir -p system/storage/logs system/storage/cache system/storage/download system/storage/session system/storage/upload && \
    chmod -R 777 system/storage

# Install Composer
COPY --from=composer:2 /usr/bin/composer /usr/bin/composer

# Install Twig via Composer
RUN composer require twig/twig:^3.0

# Expose port 80
EXPOSE 80

# Start Apache
CMD ["apache2-foreground"]
